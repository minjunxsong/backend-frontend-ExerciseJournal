{"ast":null,"code":"import Forecast from '../components/Forecast';\nexport default {\n  name: 'current-weather',\n  components: {\n    Forecast\n  },\n  data() {\n    return {\n      location: '',\n      weather: '',\n      temperature: 0,\n      weatherIconCode: '',\n      lat: 37.566535,\n      lng: 126.977969,\n      apiKey: 'YOUR_OPENWEATHERMAP_API_KEY'\n    };\n  },\n  computed: {\n    weatherIconUrl() {\n      return this.weatherIconCode ? `http://openweathermap.org/img/w/${this.weatherIconCode}.png` : '';\n    }\n  },\n  created() {\n    this.$bus.$on('sendCordinate', this.setCordinate);\n  },\n  methods: {\n    setCordinate(cordinate) {\n      this.lat = cordinate.getLat();\n      this.lng = cordinate.getLng();\n      this.axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${this.lat}&lon=${this.lng}&appid=67c78818c6afe50f6425fa397c98a955&lang=kr`).then(response => {\n        let data = response.data;\n        this.location = data.name;\n        this.weather = data.weather[0].description;\n        this.temperature = (data.main.temp - 273.15).toFixed(1);\n        this.weatherIconCode = data.weather[0].icon;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Forecast","name","components","data","location","weather","temperature","weatherIconCode","lat","lng","apiKey","computed","weatherIconUrl","created","$bus","$on","setCordinate","methods","cordinate","getLat","getLng","axios","get","then","response","description","main","temp","toFixed","icon","catch","error","console","log"],"sources":["src/components/CurrentWeather.vue"],"sourcesContent":["<template>\r\n    <div id=\"current-weather\">\r\n        <div class=\"icon\">\r\n            <img :src=\"weatherIconUrl\" v-if=\"weatherIconUrl\" style=\"width: 100px; height: 100px;\">\r\n        </div>\r\n        <div class=\"location\">{{ location }}</div>\r\n        <div class=\"weather\">{{ weather }}</div>\r\n        <div class=\"temperature\">현재 온도: {{ temperature }}℃</div>\r\n        <forecast></forecast>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport Forecast from '../components/Forecast';\r\nexport default {\r\n    name: 'current-weather',\r\n    components: {\r\n        Forecast,\r\n    },\r\n    data() {\r\n        return {\r\n            location: '',\r\n            weather: '',\r\n            temperature: 0,\r\n            weatherIconCode: '',\r\n            lat: 37.566535,\r\n            lng: 126.977969,\r\n            apiKey: 'YOUR_OPENWEATHERMAP_API_KEY'\r\n        };\r\n    },\r\n    computed: {\r\n        weatherIconUrl() {\r\n            return this.weatherIconCode ? `http://openweathermap.org/img/w/${this.weatherIconCode}.png` : '';\r\n        }\r\n    },\r\n    created() {\r\n        this.$bus.$on('sendCordinate', this.setCordinate);\r\n    },\r\n    methods: {\r\n        setCordinate(cordinate) {\r\n            this.lat = cordinate.getLat();\r\n            this.lng = cordinate.getLng();\r\n\r\n            this.axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${this.lat}&lon=${this.lng}&appid=67c78818c6afe50f6425fa397c98a955&lang=kr`)\r\n                .then((response) => {\r\n                    let data = response.data;\r\n                    this.location = data.name;\r\n                    this.weather = data.weather[0].description;\r\n                    this.temperature = (data.main.temp - 273.15).toFixed(1);\r\n                    this.weatherIconCode = data.weather[0].icon;\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#current-weather {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #1976d2;\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    margin: 5px;\r\n    height: 590px; \r\n}\r\n\r\n/* 각각의 텍스트 스타일 수정 */\r\n.location {\r\n    font-size: 36px;\r\n    color: #fdfdfd;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.weather {\r\n    font-size: 28px;\r\n    font-weight: 400;\r\n    color: #fdfdfd;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.temperature {\r\n    font-size: 48px;\r\n    font-weight: 400;\r\n    color: #fdfdfd;\r\n    margin-bottom: 20px;\r\n}\r\n\r\ndiv {\r\n    margin: 10px 5px 0 5px;\r\n}\r\n</style>\r\n"],"mappings":"AAaA,OAAAA,QAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,QAAA;MACAC,OAAA;MACAC,WAAA;MACAC,eAAA;MACAC,GAAA;MACAC,GAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACAC,eAAA;MACA,YAAAL,eAAA,2CAAAA,eAAA;IACA;EACA;EACAM,QAAA;IACA,KAAAC,IAAA,CAAAC,GAAA,uBAAAC,YAAA;EACA;EACAC,OAAA;IACAD,aAAAE,SAAA;MACA,KAAAV,GAAA,GAAAU,SAAA,CAAAC,MAAA;MACA,KAAAV,GAAA,GAAAS,SAAA,CAAAE,MAAA;MAEA,KAAAC,KAAA,CAAAC,GAAA,4DAAAd,GAAA,aAAAC,GAAA,mDACAc,IAAA,CAAAC,QAAA;QACA,IAAArB,IAAA,GAAAqB,QAAA,CAAArB,IAAA;QACA,KAAAC,QAAA,GAAAD,IAAA,CAAAF,IAAA;QACA,KAAAI,OAAA,GAAAF,IAAA,CAAAE,OAAA,IAAAoB,WAAA;QACA,KAAAnB,WAAA,IAAAH,IAAA,CAAAuB,IAAA,CAAAC,IAAA,WAAAC,OAAA;QACA,KAAArB,eAAA,GAAAJ,IAAA,CAAAE,OAAA,IAAAwB,IAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}