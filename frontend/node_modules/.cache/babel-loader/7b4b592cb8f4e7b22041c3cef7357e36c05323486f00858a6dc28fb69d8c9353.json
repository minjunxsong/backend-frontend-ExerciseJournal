{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      valid: false,\n      id: '',\n      password: '',\n      token: '',\n      urlinfo: 'http://localhost:8000',\n      result: '',\n      idRules: [function (v) {\n        return !!v || '이름을 입력해주세요';\n      }, function (v) {\n        return v && v.length <= 15 || '15자 이하로 입력해주세요';\n      }],\n      pwRules: [function (v) {\n        return !!v || '비밀번호를 입력해주세요';\n      }, function (v) {\n        return v && v.length >= 8 || '8자 이상 입력해주세요';\n      }]\n    };\n  },\n  methods: {\n    btnClick: function btnClick(action) {\n      var _this = this;\n      if (action === 'join') {\n        // 회원가입 버튼을 클릭한 경우\n        this.$router.push('/join'); // 회원가입 페이지로 이동\n      }\n\n      if (this.id.length > 0 && this.password.length > 0) {\n        if (action === 'login') {\n          // 로그인 버튼을 클릭한 경우\n          axios.post(this.urlinfo + '/login', {\n            userName: this.id,\n            password: this.password\n          }).then(function (res) {\n            localStorage.setItem('userName', res.data.userName); // 로그인 성공 시 사용자 이름을 로컬 스토리지에 저장\n            _this.userName = res.data.userName; // 로그인 성공 시 사용자 이름 업데이트\n            alert(res.data.userName + '님 환영합니다.');\n            _this.$router.push('/'); // 홈으로 이동\n          })[\"catch\"](function (err) {\n            alert('에러 발생: ' + err);\n          });\n        }\n        this.id = '';\n        this.password = '';\n        this.result = '';\n      }\n    },\n    logout: function logout() {\n      localStorage.removeItem('userName'); // 로그아웃 시 로컬 스토리지에서 사용자 정보 제거\n      this.userName = ''; // userName 초기화\n      this.$router.push('/login'); // 로그인 페이지로 이동\n    }\n  }\n};","map":{"version":3,"names":["axios","data","valid","id","password","token","urlinfo","result","idRules","v","length","pwRules","methods","btnClick","action","_this","$router","push","post","userName","then","res","localStorage","setItem","alert","err","logout","removeItem"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <v-app>\r\n    <v-container fluid>\r\n      <v-row justify=\"center\">\r\n        <v-col cols=\"12\" md=\"6\">\r\n          <v-card class=\"pa-6\">\r\n            <v-form v-model=\"valid\">\r\n              <v-text-field v-model=\"id\" :rules=\"idRules\" :counter=\"10\" label=\"이름\" required></v-text-field>\r\n              <v-text-field v-model=\"password\" :rules=\"pwRules\" :counter=\"10\" label=\"비밀번호\" required type=\"password\"></v-text-field>\r\n              <v-row justify=\"center\">\r\n                <v-col cols=\"6\">\r\n                  <v-btn color=\"primary\" block @click=\"btnClick('login')\">로그인하기</v-btn>\r\n                </v-col>\r\n                <v-col cols=\"6\">\r\n                  <v-btn color=\"secondary\" block @click=\"btnClick('join')\">회원가입</v-btn>\r\n                </v-col>\r\n              </v-row>\r\n            </v-form>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      valid: false,\r\n      id: '',\r\n      password: '',\r\n      token: '',\r\n      urlinfo: 'http://localhost:8000',\r\n      result: '',\r\n      idRules: [\r\n        v => !!v || '이름을 입력해주세요',\r\n        v => (v && v.length <= 15) || '15자 이하로 입력해주세요',\r\n      ],\r\n      pwRules: [\r\n        v => !!v || '비밀번호를 입력해주세요',\r\n        v => (v && v.length >= 8) || '8자 이상 입력해주세요',\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    btnClick(action) {\r\n      if (action === 'join') {\r\n        // 회원가입 버튼을 클릭한 경우\r\n        this.$router.push('/join'); // 회원가입 페이지로 이동\r\n      }\r\n      if (this.id.length > 0 && this.password.length > 0) {\r\n        if (action === 'login') {\r\n          // 로그인 버튼을 클릭한 경우\r\n          axios\r\n        .post(this.urlinfo + '/login', {\r\n          userName: this.id,\r\n          password: this.password,\r\n        })\r\n        .then(res => {\r\n          localStorage.setItem('userName', res.data.userName); // 로그인 성공 시 사용자 이름을 로컬 스토리지에 저장\r\n          this.userName = res.data.userName; // 로그인 성공 시 사용자 이름 업데이트\r\n          alert(res.data.userName + '님 환영합니다.');\r\n          this.$router.push('/'); // 홈으로 이동\r\n        })\r\n        .catch(err => {\r\n          alert('에러 발생: ' + err);\r\n        });\r\n        }\r\n        this.id = '';\r\n        this.password = '';\r\n        this.result = '';\r\n      }\r\n      \r\n    },\r\n    logout() {\r\n      localStorage.removeItem('userName'); // 로그아웃 시 로컬 스토리지에서 사용자 정보 제거\r\n      this.userName = ''; // userName 초기화\r\n      this.$router.push('/login'); // 로그인 페이지로 이동\r\n      },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 추가적인 스타일링을 여기에 작성할 수 있습니다. */\r\n</style>"],"mappings":";AA0BA,OAAAA,KAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACAC,EAAA;MACAC,QAAA;MACAC,KAAA;MACAC,OAAA;MACAC,MAAA;MACAC,OAAA,GACA,UAAAC,CAAA;QAAA,SAAAA,CAAA;MAAA,GACA,UAAAA,CAAA;QAAA,OAAAA,CAAA,IAAAA,CAAA,CAAAC,MAAA;MAAA,EACA;MACAC,OAAA,GACA,UAAAF,CAAA;QAAA,SAAAA,CAAA;MAAA,GACA,UAAAA,CAAA;QAAA,OAAAA,CAAA,IAAAA,CAAA,CAAAC,MAAA;MAAA;IAEA;EACA;EACAE,OAAA;IACAC,QAAA,WAAAA,SAAAC,MAAA;MAAA,IAAAC,KAAA;MACA,IAAAD,MAAA;QACA;QACA,KAAAE,OAAA,CAAAC,IAAA;MACA;;MACA,SAAAd,EAAA,CAAAO,MAAA,aAAAN,QAAA,CAAAM,MAAA;QACA,IAAAI,MAAA;UACA;UACAd,KAAA,CACAkB,IAAA,MAAAZ,OAAA;YACAa,QAAA,OAAAhB,EAAA;YACAC,QAAA,OAAAA;UACA,GACAgB,IAAA,WAAAC,GAAA;YACAC,YAAA,CAAAC,OAAA,aAAAF,GAAA,CAAApB,IAAA,CAAAkB,QAAA;YACAJ,KAAA,CAAAI,QAAA,GAAAE,GAAA,CAAApB,IAAA,CAAAkB,QAAA;YACAK,KAAA,CAAAH,GAAA,CAAApB,IAAA,CAAAkB,QAAA;YACAJ,KAAA,CAAAC,OAAA,CAAAC,IAAA;UACA,WACA,WAAAQ,GAAA;YACAD,KAAA,aAAAC,GAAA;UACA;QACA;QACA,KAAAtB,EAAA;QACA,KAAAC,QAAA;QACA,KAAAG,MAAA;MACA;IAEA;IACAmB,MAAA,WAAAA,OAAA;MACAJ,YAAA,CAAAK,UAAA;MACA,KAAAR,QAAA;MACA,KAAAH,OAAA,CAAAC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}